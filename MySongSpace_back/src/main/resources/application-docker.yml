spring:
  data:
    redis:
      host: redis  # Docker Compose에서 Redis 컨테이너 이름
      port: 6379
  datasource:
    url: jdbc:mysql://db:3306/music_database  # Docker Compose에서 MySQL 컨테이너 이름
    username: root
    password: password123  # Docker Compose에서 설정한 MySQL root 비밀번호
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: "db6c92b5a212f57e092594a2c9908509"
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

cloud:
  aws:
    credentials:
      access-key: "ncp_iam_BPAMKR52qji6tsLAa0vw"
      secret-key: "ncp_iam_BPKMKRFfctpg0lKAtmwvGCOLUzSiSuTqKK"
    stack:
      auto: false
    region:
      static: ap-northeast-2
    s3:
      endpoint: https://kr.object.ncloudstorage.com
      bucket: "music-storage"

logging:
  level:
    org.hibernate.sql: debug
    org.springframework.security: DEBUG

jwt:
  key: "d4e5f6a7b8c9d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"
